name: Python CI

on:
  push:
    branches:
      - "*"

jobs:
  test-core:
    runs-on: ubuntu-22.04
    if: |
      github.ref != 'refs/heads/master' && 
      (
        startsWith(github.event.head_commit.message, 'core') ||
        startsWith(github.event.head_commit.message, 'all')
      )

    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: "x64"

      - name: Install dependencies
        run: |
          cd core
          poetry install

      - name: Run pytest
        run: |
          cd core
          poetry run pytest -m "not with_crowd_seg_data"

  lint-core:
    runs-on: ubuntu-22.04
    if: |
      github.ref != 'refs/heads/master' && 
      (
        startsWith(github.event.head_commit.message, 'core') ||
        startsWith(github.event.head_commit.message, 'all')
      )
    strategy:
      matrix:
        python-version: [3.11]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: "x64"

      - name: Install dependencies
        run: |
          cd core
          poetry install

      - name: Run mypy
        run: |
          cd core
          poetry run mypy seg_tgce

      - name: Run pylint
        run: |
          cd core
          poetry run pylint seg_tgce

  lint-docs:
    runs-on: ubuntu-22.04
    if: |
      github.ref != 'refs/heads/master' && 
      (
        startsWith(github.event.head_commit.message, 'docs') ||
        startsWith(github.event.head_commit.message, 'all')
      )
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: "x64"

      - name: Verify docs quality
        run: |
          cd docs
          pip install -r requirements.txt
          rstcheck -r source
          make html
